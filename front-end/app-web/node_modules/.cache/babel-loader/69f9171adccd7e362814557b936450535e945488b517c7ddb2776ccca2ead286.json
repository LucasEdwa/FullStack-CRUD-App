{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\allcode\\\\Full Stack CRUD App\\\\front-end\\\\app-web\\\\src\\\\pages\\\\UpdateCountry.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateCountry() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [country, setCountry] = useState({});\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState();\n  const updateCountry = async () => {\n    await fetch(\"http:localhost:4000/update-country/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(country)\n    }).then(async data => {\n      const response = await data.json();\n      if (response.success) {\n        navigate(\"/country/\" + id);\n      }\n    });\n  };\n  const handleFormChange = e => {\n    if (e.target.name === 'image') {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [e.target.name]: e.target.files[0]\n      }));\n    } else {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [e.target.name]: e.target.value\n      }));\n    }\n  };\n  useEffect(() => {\n    const getCountry = async () => {\n      const response = await fetch(\"http://localhost:4000/get-country/\" + id).then(data => data.json());\n      setCountry(response);\n    };\n    getCountry();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex flex-col gap-4 pt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl\",\n      children: [\"Re-write country :\", country.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      value: country.name,\n      onChange: handleFormChange,\n      type: \"text\",\n      placeholder: \"Country name\",\n      className: \"border-2 border-gray-300 rounded-xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"description\",\n      value: country.description,\n      onChange: handleFormChange,\n      type: \"text\",\n      placeholder: \"Description\",\n      className: \"border-2 border-gray-300 rounded-xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"image\",\n      value: country.image,\n      onChange: handleFormChange,\n      type: \"file\",\n      placeholder: \"Image\",\n      className: \"border-2 border-gray-300 rounded-xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateCountry,\n      className: \"px-4 py-2 bg-blue-500 hover:bg-blue-700 text-white rounded-xl\",\n      children: \"Update Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateCountry, \"TNT2Clx18zq/DwQWfHR+gfV4LLw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateCountry;\nvar _c;\n$RefreshReg$(_c, \"UpdateCountry\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","Link","jsxDEV","_jsxDEV","UpdateCountry","_s","id","country","setCountry","navigate","formData","setFormData","updateCountry","fetch","method","headers","body","JSON","stringify","then","data","response","json","success","handleFormChange","e","target","name","prevFormData","files","value","getCountry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","description","image","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Desktop/allcode/Full Stack CRUD App/front-end/app-web/src/pages/UpdateCountry.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\n\r\nexport default function UpdateCountry() {\r\n    const {id} = useParams();\r\n    const [country, setCountry] = useState({});\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState();\r\n\r\n    const updateCountry = async () => {\r\n        \r\n        await fetch(\"http:localhost:4000/update-country/\" + id, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(country)\r\n        }).then(async (data) => {\r\n            const response = await data.json();\r\n            if (response.success) {\r\n                navigate(\"/country/\" + id);\r\n            }\r\n         \r\n        });\r\n    }\r\n    const handleFormChange = (e) => {\r\n        if (e.target.name === 'image') {\r\n            setFormData((prevFormData)=> ({\r\n                ...prevFormData, \r\n                [e.target.name]: e.target.files[0]\r\n            }));\r\n        } else {\r\n            setFormData((prevFormData)=> ({\r\n                ...prevFormData, \r\n                [e.target.name]: e.target.value\r\n            }));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const getCountry = async () => {\r\n            const response = await fetch(\"http://localhost:4000/get-country/\" + id)\r\n           .then((data) => data.json());\r\n            setCountry(response);\r\n        }\r\n        getCountry();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\" flex flex-col gap-4 pt-8\">\r\n            <h2 className=\"text-xl\">Re-write country :{country.name}</h2>\r\n            <input name=\"name\" value={country.name} onChange={handleFormChange} type=\"text\" placeholder=\"Country name\" className=\"border-2 border-gray-300 rounded-xl\" />\r\n            <input name=\"description\" value={country.description} onChange={handleFormChange} type=\"text\" placeholder=\"Description\" className=\"border-2 border-gray-300 rounded-xl\" />\r\n            <input name=\"image\" value={country.image} onChange={handleFormChange} type=\"file\" placeholder=\"Image\" className=\"border-2 border-gray-300 rounded-xl\" />\r\n            <button onClick={updateCountry} className=\"px-4 py-2 bg-blue-500 hover:bg-blue-700 text-white rounded-xl\">\r\n                Update Country</button>\r\n        </div>\r\n    )   \r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}